// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EntityLayer.Lesson", b =>
                {
                    b.Property<int>("lesson_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("lesson_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lesson_ID");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("EntityLayer.Login", b =>
                {
                    b.Property<int>("user_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("user_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_Pword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_ID");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("EntityLayer.Student", b =>
                {
                    b.Property<int>("student_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("lesson_ID")
                        .HasColumnType("int");

                    b.Property<string>("student_Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("student_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("student_Number")
                        .HasColumnType("int");

                    b.HasKey("student_ID");

                    b.HasIndex("lesson_ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EntityLayer.Teacher", b =>
                {
                    b.Property<int>("teacher_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("teacher_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacher_Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("teacher_ID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudentTeacher", b =>
                {
                    b.Property<int>("studentsstudent_ID")
                        .HasColumnType("int");

                    b.Property<int>("teachersteacher_ID")
                        .HasColumnType("int");

                    b.HasKey("studentsstudent_ID", "teachersteacher_ID");

                    b.HasIndex("teachersteacher_ID");

                    b.ToTable("StudentTeacher");
                });

            modelBuilder.Entity("EntityLayer.Student", b =>
                {
                    b.HasOne("EntityLayer.Lesson", "lesson")
                        .WithMany("students")
                        .HasForeignKey("lesson_ID");

                    b.Navigation("lesson");
                });

            modelBuilder.Entity("StudentTeacher", b =>
                {
                    b.HasOne("EntityLayer.Student", null)
                        .WithMany()
                        .HasForeignKey("studentsstudent_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Teacher", null)
                        .WithMany()
                        .HasForeignKey("teachersteacher_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityLayer.Lesson", b =>
                {
                    b.Navigation("students");
                });
#pragma warning restore 612, 618
        }
    }
}
